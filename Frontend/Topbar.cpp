#include "Topbar.h"

#include "Date.h"
#include "../Frontend.hpp"

#include <GUI/Icon.h>
#include <GUI/TextArea.h>

namespace fEnd
{
	Topbar::Topbar(const bEnd::Tag& tag)
		: Topbar()
	{
		setTarget(tag);
	}

	Topbar::Topbar()
	{
		gui::HoverMessage default(gui::bind("", sf::Color()), Resources::font("arial"), 13);
		default.setBackgroundFill(sf::Color(30, 30, 35, 240))
			.setBorderThickness(2)
			.setBorderFill(sf::Color(45, 45, 50, 245));
		const auto fullstop(gui::bind(".", sf::Color::White));
		const sf::Color color(231, 194, 18, 255);

		setBackgroundTexture(Resources::texture("topbar_shadow"), false);
		add("flag", gui::Icon());
		add("energy_icon", gui::Icon(Resources::texture("icon_energy"), true).setPosition(95, -1)
			.setMessage(default.setText(gui::bind("Energy\n", color) + gui::bind("Production covers various sources of power, mainly\ncoal. ", sf::Color::White)
				+ gui::bind("Energy ", color) + gui::bind("is required for ", sf::Color::White) + gui::bind("Industrial Capacity", color)
				+ fullstop)));
		add("metal_icon", gui::Icon(Resources::texture("icon_metal"), true).setPosition(163, 0)
			.setMessage(default.setText(gui::bind("Metal\n", color)
				+ gui::bind("Heavy industry requires various metal ores, primarily\niron. They are used to produce ", sf::Color::White)
				+ gui::bind("Industrial Capacity", color) + fullstop)));
		add("rare_mats_icon", gui::Icon(Resources::texture("icon_raremat"), true).setPosition(228, 0)
			.setMessage(default.setText(gui::bind("Rare Materials\n", color) + gui::bind("This covers a spectrum of materials essential \
for production, including\nnatural products like rubber and less-common metals such as chrome\nand uranium.", sf::Color::White) +
				gui::bind(" Necessary for ", sf::Color::White) + gui::bind("Industrial Capacity", color) + fullstop)));
		add("oil_icon", gui::Icon(Resources::texture("icon_oil"), true).setPosition(288, -2)
			.setMessage(default.setText(gui::bind("Crude Oil\n", color) + gui::bind("Procured from drilling in oil-rich provinces or through trade and \
essential\nfor any modern army to operate. Must first be refined into ", sf::Color::White) + gui::bind("Fuel", color) + fullstop)));
		add("ic_icon", gui::Icon(Resources::texture("icon_ic"), true).setPosition(362, 4)
			.setMessage(default.setText(gui::bind("Industrial Capacity\n", color) + gui::bind("This represents the combined production \
capacity of our industries. To\nproduce one point of ", sf::Color::White) + gui::bind("Industrial Capacity ", color) +
				gui::bind("we need one level of ", sf::Color::White) + gui::bind("Industry\n", color) + gui::bind("fully built, as well as 2 ", sf::Color::White) +
				gui::bind("Energy", color) + gui::bind(", 1 ", sf::Color::White) + gui::bind("Metal", color) + gui::bind(" and 0.5", sf::Color::White) +
				gui::bind(" Rare Materials", color) + fullstop)));
		add("supplies_icon", gui::Icon(Resources::texture("icon_supplies"), true).setPosition(480, -1)
			.setMessage(default.setText(gui::bind("Supplies\n", color) + gui::bind("Covers everything a modern army needs to operate\nexcept ", sf::Color::White)
				+ gui::bind("Fuel", color) + gui::bind(" - food rations, ammunition and weapons.\nThese are produced using ", sf::Color::White) + 
				gui::bind("Industrial Capacity", color))));
		add("fuel_icon", gui::Icon(Resources::texture("icon_fuel"), true).setPosition(538, -1)
			.setMessage(default.setText(gui::bind("Fuel\n", color) + gui::bind("Petroleum, oil and lubricants. Refined from ", sf::Color::White) + 
				gui::bind("Crude Oil", color) + fullstop + gui::bind("\nAll motorised units, aircraft and ships need these to\noperate effectively.", sf::Color::White))));
		add("money_icon", gui::Icon(Resources::texture("icon_money"), true).setPosition(591, -1)
			.setMessage(default.setText(gui::bind("Money\n", color) + gui::bind("Consists of reserves of gold, foreign exchange or work done, and is used\nmainly \
to purchase goods that are not produced at home from other\ncountries. Passively generated by our nation's ", sf::Color::White) + gui::bind("Industrial Capacity", color) +
				fullstop)));
		add("mp_icon", gui::Icon(Resources::texture("icon_manpower"), true).setPosition(664, -3)
			.setMessage(default.setText(gui::bind("Manpower\n", color) + gui::bind("Represents men of military age ready and able to form drafts\nfor our armies. \
They can be used to make new units as well as\nbring existing ones back to full strength.", sf::Color::White))));
		add("diplo_icon", gui::Icon(Resources::texture("icon_diplomacy"), true).setPosition(735, -5)
			.setMessage(default.setText(gui::bind("Diplomatic Influence\n", color) + gui::bind("Represents our pool of trained foreign service professionals,\nwhich we \
can use for diplomatic missions.", sf::Color::White))));
		add("espionage_icon", gui::Icon(Resources::texture("icon_espionage"), true).setPosition(778, -4)
			.setMessage(default.setText(gui::bind("Espionage\n", color) + gui::bind("Represents the total number of available spies and the infrastructure needed for\n\
supporting them. These people are well-trained in the underhanded art of espionage\nand will aid us in our attempts to subvert enemy countries and protect our own.", sf::Color::White))));
		add("officer_ratio_icon", gui::Icon(Resources::texture("icon_leadership"), true).setPosition(822, -4)
			.setMessage(default.setText(gui::bind("Officer Ratio\n", color) + gui::bind("If the ratio of active officers to enlisted soldiers falls below 100 %,\nour units will \
become increasingly likely to fall apart in combat\nshould they take too many losses.", sf::Color::White))));
		add("dissent_icon", gui::Icon(Resources::texture("icon_dissent"), true).setPosition(873, -3)
			.setMessage(default.setText(gui::bind("Dissent\n", color) + gui::bind("Represents the short-term unhappiness of our people. This can be reduced\nby increasing the supply \
of consumer goods to the civillian economy. If\nleft ignored, this will start to reduce support for the ruling party.", sf::Color::White))));
		add("unity_icon", gui::Icon(Resources::texture("icon_unity"), true).setPosition(913, -4)
			.setMessage(default.setText(gui::bind("National Unity\n", color) + gui::bind("Represents the willingness of our people to fight a war to the finish. The higher\nthis value is \
the longer we will fight before considering surrender.", sf::Color::White))));
		add("date", Date(Resources::font("arial")).setPosition(99, 29));
		add("nation_name", gui::TextArea("", Resources::font("arial"), 13).setPosition(99, 47));

		shadow.setTexture(Resources::texture("topbar_shadow"));
		flagShadow.setTexture(Resources::texture("topbarflag_shadow"));
	}

	Topbar& Topbar::setTarget(const bEnd::Tag& tag)
	{
		target = tag;

		setBackgroundTexture(Resources::texture(Resources::textureExists("topbar_" + std::string(tag)) ? "topbar_" + std::string(tag) : "topbar_generic"));
		((gui::Icon&)at("flag")).setTexture(Nation::get(tag).getFlag());
		((gui::TextArea&)at("nation_name")).setText(gui::bind(Nation::get(tag).getName(), sf::Color(165, 169, 163)));

		return *this;
	}

	std::unique_ptr<gui::Window> Topbar::copy() const
	{
		return std::unique_ptr<gui::Window>(new Topbar(*this));
	}

	std::unique_ptr<gui::Window> Topbar::move()
	{
		return std::unique_ptr<gui::Window>(new Topbar(std::move(*this)));
	}

	void Topbar::draw(sf::RenderTarget& target, sf::RenderStates states) const
	{
		target.draw(shadow, states);
		Window::draw(target, states);
		target.draw(flagShadow);
	}
}